{"version":3,"file":"static/js/674.a9676b69.chunk.js","mappings":"oMACA,EAA4B,6BAA5B,EAAyE,iCAAzE,EAAuH,8BAAvH,EAAkK,8BAAlK,EAA4M,6B,SCqC5M,EAjCkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACV,eAAIL,UAAWC,EAAf,UACE,UAAC,KAAD,CACED,UAAWC,EACXK,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMV,GAHjB,UAKGO,GACC,gBACEL,UAAWC,EACXQ,IAAG,yCAAoCJ,GACvCK,IAAG,oBAAeP,MAGpB,gBACEH,UAAWC,EACXQ,IAAKE,EACLD,IAAK,iBAGT,cAAGV,UAAWC,EAAd,SAAkCE,QAnBIC,EADhC,KA0BjB,C,2GCnCD,EAA4B,4BAA5B,EAAiE,yB,SCmBjE,EAfiB,WACf,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBF,GAAWG,MAAMC,QAAQC,MAC9C,GAAE,KAGD,kBAAMlB,UAAWC,EAAjB,WACE,eAAID,UAAWC,EAAf,SAA8B,oBAC9B,SAACkB,EAAA,EAAD,CAAWtB,OAAQA,MAGxB,C,8LChBKuB,EAAU,mCACVC,EAAW,gCAEJN,EAAmB,mCAAG,WAAMF,GAAN,gGAERS,EAAAA,EAAAA,IAAA,UAClBD,EADkB,sCACoBD,IAHZ,cAEzBG,EAFyB,yBAKxBV,EAAUU,EAASC,KAAKC,UALA,gCAO/BR,QAAQS,IAAR,UAAe,KAAMC,KAArB,aAA8B,KAAMC,UAPL,yDAAH,sDAWnBC,EAAkB,mCAAG,WAAOC,EAAOC,GAAd,kGAEPT,EAAAA,EAAAA,IAAA,UAClBD,EADkB,gCACcD,EADd,kBAC+BU,EAD/B,+BAFO,cAExBP,EAFwB,OAKxBC,EAAOD,EAASC,KAAKC,QALG,kBAMvBM,EAAkBP,IANK,gCAQ9BP,QAAQS,IAAR,UAAe,KAAMC,KAArB,aAA8B,KAAMC,UARN,yDAAH,wDAYlBI,EAAe,mCAAG,WAAOC,EAASC,GAAhB,gGAEJZ,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACDY,EADC,oBACkBb,IAHd,cAErBG,EAFqB,yBAKpBW,EAASX,EAASC,OALE,gCAO3BP,QAAQS,IAAR,UAAe,KAAMC,KAArB,aAA8B,KAAMC,UAPT,yDAAH,wDAWfO,EAAS,mCAAG,WAAOF,EAASG,GAAhB,gGAEEd,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACDY,EADC,4BAC0Bb,IAH5B,cAEfG,EAFe,yBAKda,EAAQb,EAASC,KAAKa,OALR,gCAOrBpB,QAAQS,IAAR,UAAe,KAAMC,KAArB,aAA8B,KAAMC,UAPf,yDAAH,wDAWTU,EAAY,mCAAG,WAAOL,EAASM,GAAhB,gGAEDjB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACDY,EADC,4BAC0Bb,IAHzB,cAElBG,EAFkB,yBAKjBgB,EAAWhB,EAASC,KAAKC,UALR,gCAOxBR,QAAQS,IAAR,UAAe,KAAMC,KAArB,aAA8B,KAAMC,UAPZ,yDAAH,uD","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","services/API.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieListItem\":\"MovieList_movieListItem__6DqRG\",\"movieImage\":\"MovieList_movieImage__txbdB\",\"movieTitle\":\"MovieList_movieTitle__RhENm\",\"movieLink\":\"MovieList_movieLink__kzavH\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport placeholderImage from '../../images/placeholderImage.png';\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={styles.movieList}>\n      {movies.map(({ title, id, poster_path }) => (\n        <li className={styles.movieListItem} key={id}>\n          <Link\n            className={styles.movieLink}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n          >\n            {poster_path ? (\n              <img\n                className={styles.movieImage}\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={`Poster of ${title}`}\n              />\n            ) : (\n              <img\n                className={styles.movieImage}\n                src={placeholderImage}\n                alt={'Placeholder'}\n              />\n            )}\n            <p className={styles.movieTitle}>{title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HomePage_container__uNu-e\",\"header\":\"HomePage_header__04GYX\"};","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'services/API';\nimport MovieList from 'components/MovieList/MovieList';\nimport styles from './HomePage.module.css';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies(setMovies).catch(console.error);\n  }, []);\n\n  return (\n    <main className={styles.container}>\n      <h1 className={styles.header}>Trending today</h1>\n      <MovieList movies={movies} />\n    </main>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = 'ef7bbc65cde0a77a652ac5d100215648';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async setMovies => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return setMovies(response.data.results);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\nexport const fetchMoviesByQuery = async (query, setSearchedMovies) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=true`\n    );\n    const data = response.data.results;\n    return setSearchedMovies(data);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\nexport const fetchMoviesById = async (movieId, setMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    return setMovie(response.data);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\nexport const fetchCast = async (movieId, setCast) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return setCast(response.data.cast);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\nexport const fetchReviews = async (movieId, setReviews) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return setReviews(response.data.results);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n"],"names":["movies","location","useLocation","className","styles","map","title","id","poster_path","to","state","from","src","alt","placeholderImage","useState","setMovies","useEffect","fetchTrendingMovies","catch","console","error","MovieList","API_KEY","BASE_URL","axios","response","data","results","log","name","message","fetchMoviesByQuery","query","setSearchedMovies","fetchMoviesById","movieId","setMovie","fetchCast","setCast","cast","fetchReviews","setReviews"],"sourceRoot":""}